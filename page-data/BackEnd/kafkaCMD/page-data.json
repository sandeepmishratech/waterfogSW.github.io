{"componentChunkName":"component---src-templates-blog-post-js","path":"/BackEnd/kafkaCMD/","result":{"data":{"site":{"siteMetadata":{"title":"For The Record","author":"San Kim","siteUrl":"https://waterfogsw.github.io","comment":{"disqusShortName":"","utterances":"waterfogSW/waterfogSW.github.io"}}},"markdownRemark":{"id":"42e50ffb-590a-5783-bb1b-7242285e1be8","excerpt":"토픽 생성 를 통해 토픽 관련 명령을 실행할 수 있다.  create 토픽을 생성하는 명령어 bootstrap-server 토픽을 생성할 카프카 클러스터를 구성하는 브로커 IP와 Port를 적는다. partitions 파티션의 개수를 지정한다. 옵션을 명시하지 않으면, 카프카 브로커의 설정파일의 옵션을 따른다. replication-factor 토픽의 파티션을 복제할 복제 개수를 적는다. 사용하는 브로커의 개수를 따르면 되고, 실제 업무환경에서는…","html":"<h2 id=\"토픽-생성\" style=\"position:relative;\"><a href=\"#%ED%86%A0%ED%94%BD-%EC%83%9D%EC%84%B1\" aria-label=\"토픽 생성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>토픽 생성</h2>\n<p><code class=\"language-text\">kafka-topics.sh</code>를 통해 토픽 관련 명령을 실행할 수 있다. </p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ bin/kafka-topics.sh \\\n--create \\\n--bootstrap-server &lt;카프카 서버 주소>:9092 \\\n--partitions 3 \\\n--replication-factor 1 \\\n--config retention.ms=172800000 \\\n--topic hello.kafka</code></pre></div>\n<ol>\n<li>\n<p>create</p>\n<ul>\n<li>토픽을 생성하는 명령어</li>\n</ul>\n</li>\n<li>\n<p>bootstrap-server</p>\n<ul>\n<li>토픽을 생성할 카프카 클러스터를 구성하는 브로커 IP와 Port를 적는다.</li>\n</ul>\n</li>\n<li>\n<p>partitions</p>\n<ul>\n<li>파티션의 개수를 지정한다. 옵션을 명시하지 않으면, 카프카 브로커의 설정파일의 <code class=\"language-text\">num.partitions</code>옵션을 따른다.</li>\n</ul>\n</li>\n<li>\n<p>replication-factor</p>\n<ul>\n<li>토픽의 파티션을 복제할 복제 개수를 적는다. 사용하는 브로커의 개수를 따르면 되고, 실제 업무환경에서는 3개 이상의 카프카 브로커로 운영하는 것이 일반적</li>\n</ul>\n</li>\n<li>\n<p>config retentions.ms</p>\n<ul>\n<li>토픽의 데이터를 유지하는 기간을 나타낸다. ms단위로, 172800000은 2일을 나타낸다. 따라서 2일이 지난 토픽 데이터는 삭제된다.</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"토픽-리스트-조회\" style=\"position:relative;\"><a href=\"#%ED%86%A0%ED%94%BD-%EB%A6%AC%EC%8A%A4%ED%8A%B8-%EC%A1%B0%ED%9A%8C\" aria-label=\"토픽 리스트 조회 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>토픽 리스트 조회</h2>\n<h3 id=\"토픽-리스트-조회-1\" style=\"position:relative;\"><a href=\"#%ED%86%A0%ED%94%BD-%EB%A6%AC%EC%8A%A4%ED%8A%B8-%EC%A1%B0%ED%9A%8C-1\" aria-label=\"토픽 리스트 조회 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>토픽 리스트 조회**</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ bin/kafka-topics.sh --bootstrap-server &lt;카프카 서버 주소>:9092 --list</code></pre></div>\n<h3 id=\"상세-조회\" style=\"position:relative;\"><a href=\"#%EC%83%81%EC%84%B8-%EC%A1%B0%ED%9A%8C\" aria-label=\"상세 조회 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>상세 조회</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ bin/kafka-topics.sh --bootstrap-server &lt;카프카 서버 주소>:9092 --describe --topic &lt;조회할 topic명></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Topic: hello.kafka      TopicId: XGxv2fB5QTidTzfb5rsShA PartitionCount: 3       ReplicationFactor: 1    Configs: segment.bytes=1073741824,retention.ms=172800000\n        Topic: hello.kafka      Partition: 0    Leader: 0       Replicas: 0     Isr: 0\n        Topic: hello.kafka      Partition: 1    Leader: 0       Replicas: 0     Isr: 0\n        Topic: hello.kafka      Partition: 2    Leader: 0       Replicas: 0     Isr: 0</code></pre></div>\n<h2 id=\"토픽-옵션-수정\" style=\"position:relative;\"><a href=\"#%ED%86%A0%ED%94%BD-%EC%98%B5%EC%85%98-%EC%88%98%EC%A0%95\" aria-label=\"토픽 옵션 수정 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>토픽 옵션 수정</h2>\n<p>토픽 옵션을 변경하기 위해서 <code class=\"language-text\">kafka-topics.sh</code> 또는 <code class=\"language-text\">kafka-configs.sh</code>를 사용한다.</p>\n<h3 id=\"파티션-개수-변경\" style=\"position:relative;\"><a href=\"#%ED%8C%8C%ED%8B%B0%EC%85%98-%EA%B0%9C%EC%88%98-%EB%B3%80%EA%B2%BD\" aria-label=\"파티션 개수 변경 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>파티션 개수 변경</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ bin/kafka-topics.sh \\\n--topic &lt;속성을 변경할 topic의 이름> \\\n--bootstrap-server &lt;카프카 서버 주소>:9092 \\\n--alter \\\n--partitions 4</code></pre></div>\n<p>파티션의 개수는 늘릴수는 있지만 줄일 수는 없다. 따라서 파티션 개수를 늘릴때는 반드시 늘려야 하는 상황인지 판단하는것이 중요하다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Topic: hello.kafka      TopicId: XGxv2fB5QTidTzfb5rsShA PartitionCount: 4       ReplicationFactor: 1    Configs: segment.bytes=1073741824,retention.ms=172800000\n        Topic: hello.kafka      Partition: 0    Leader: 0       Replicas: 0     Isr: 0\n        Topic: hello.kafka      Partition: 1    Leader: 0       Replicas: 0     Isr: 0\n        Topic: hello.kafka      Partition: 2    Leader: 0       Replicas: 0     Isr: 0\n        Topic: hello.kafka      Partition: 3    Leader: 0       Replicas: 0     Isr: 0</code></pre></div>\n<p>파티션의 번호는 0부터 1씩 늘어나며 순차적으로 부여된다. </p>\n<h3 id=\"데이터-유지시간retentionms-변경\" style=\"position:relative;\"><a href=\"#%EB%8D%B0%EC%9D%B4%ED%84%B0-%EC%9C%A0%EC%A7%80%EC%8B%9C%EA%B0%84retentionms-%EB%B3%80%EA%B2%BD\" aria-label=\"데이터 유지시간retentionms 변경 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>데이터 유지시간(retention.ms) 변경</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ bin/kafka-configs.sh --bootstrap-server &lt;카프카 서버 주소>:9092 \\\n--entity-type topics \\\n--entity-name hello.kafka \\\n--alter --add-config retention.ms=86400000</code></pre></div>\n<p><strong>변경 확인</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ bin/kafka-topics.sh --bootstrap-server 52.79.85.44:9092 --describe --topic hello.kafka\n\nTopic: hello.kafka      TopicId: XGxv2fB5QTidTzfb5rsShA PartitionCount: 4       ReplicationFactor: 1    Configs: segment.bytes=1073741824,retention.ms=86400000\n        Topic: hello.kafka      Partition: 0    Leader: 0       Replicas: 0     Isr: 0\n        Topic: hello.kafka      Partition: 1    Leader: 0       Replicas: 0     Isr: 0\n        Topic: hello.kafka      Partition: 2    Leader: 0       Replicas: 0     Isr: 0\n        Topic: hello.kafka      Partition: 3    Leader: 0       Replicas: 0     Isr: 0</code></pre></div>\n<h2 id=\"kafka-console-producersh\" style=\"position:relative;\"><a href=\"#kafka-console-producersh\" aria-label=\"kafka console producersh permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>kafka-console-producer.sh</h2>\n<p><code class=\"language-text\">kafka-console-producer.sh</code>명령어를 통해 토픽에 데이터를 넣을 수 있다. </p>\n<p>토픽에 넣는 데이터는 <code class=\"language-text\">레코드(record)</code>라고 부르며 메시지 키(key)와 값(value)로 이루어져 있다.</p>\n<h3 id=\"메시지-키-없이-메시지-값만-보내기\" style=\"position:relative;\"><a href=\"#%EB%A9%94%EC%8B%9C%EC%A7%80-%ED%82%A4-%EC%97%86%EC%9D%B4-%EB%A9%94%EC%8B%9C%EC%A7%80-%EA%B0%92%EB%A7%8C-%EB%B3%B4%EB%82%B4%EA%B8%B0\" aria-label=\"메시지 키 없이 메시지 값만 보내기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>메시지 키 없이 메시지 값만 보내기</h3>\n<p>메시지 키없이 메시지 값만 보낼경우 메시지 키가 자바의 null로 설정되어 브로커로 전송된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ bin/kafka-console-producer.sh --bootstrap-server &lt;카프카 서버 주소>:9092 \\\n--topic hello.kafka\n\n>NullTest1\n>NullTest2\n>NullTest3</code></pre></div>\n<p><code class=\"language-text\">bin/kafka-console-producer.sh</code>를 통해 전송되는 레코드의 값은 UTF-8을 기반으로 Byte로 변환된 후 ByteArraySerializer로만 직렬화 된다. 즉, String이 아닌 타입으로는 직렬화 하여 전송할 수 없다. </p>\n<p>만약 다른 타입으로 직렬화하여 데이터를 브로커로 전송하고 싶으면 직접 프로듀서 애플리케이션을 개발하여야 한다.</p>\n<p>메시지 키가 null인 경우 프로듀서가 파티션으로 전송할때 레코드 배치 단위로 라운드로빈으로 전송된다.</p>\n<h3 id=\"메시지-키를-가지는-레코드-전송\" style=\"position:relative;\"><a href=\"#%EB%A9%94%EC%8B%9C%EC%A7%80-%ED%82%A4%EB%A5%BC-%EA%B0%80%EC%A7%80%EB%8A%94-%EB%A0%88%EC%BD%94%EB%93%9C-%EC%A0%84%EC%86%A1\" aria-label=\"메시지 키를 가지는 레코드 전송 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>메시지 키를 가지는 레코드 전송</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ bin/kafka-console-producer.sh --bootstrap-server &lt;카프카 서버 주소>:9092 \\\n--topic hello.kafka \\\n--property \"parse.key=true\" \\\n--property \"key.separator=:\"\n\n>key1:val1\n>key2:val2\n>key3:val3\n>key3:val4</code></pre></div>\n<ul>\n<li>\n<p>key.separator=:</p>\n<ul>\n<li>키와 값을 나누는 구분자를 선언한다. 만약 구분자를 넣지 않고 엔터를 누르면 KafkaException과 함께 종료된다.</li>\n</ul>\n</li>\n</ul>\n<p>메시지 키와 값을 함께 전송한 레코드는 메시지 키의 해시값을 작성하여 존재하는 토픽의 파티션중 한개에 할당된다. 따라서 메시지 키가 동일할 경우 동일 파티션에 전송된다.</p>\n<h2 id=\"kafka-console-consumersh\" style=\"position:relative;\"><a href=\"#kafka-console-consumersh\" aria-label=\"kafka console consumersh permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>kafka-console-consumer.sh</h2>\n<p><code class=\"language-text\">kafka-console-consumer.sh</code>명령어를 통해 토픽에 데이터를 확인할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ bin/kafka-console-consumer.sh --bootstrap-server &lt;카프카 서버 주소>:9092 \\\n--topic hello.kafka \\\n--from-beginning\n\nNullTest2\nval1\nval2\nNullTest3\nval3\nval4\nNullTest1\n^CProcessed a total of 7 messages</code></pre></div>\n<ul>\n<li>\n<p>from-beginning</p>\n<ul>\n<li>토픽에 저장된 가장 처음의 데이터부터 출력한다.</li>\n</ul>\n</li>\n</ul>\n<p><strong>키와 함께 확인</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ bin/kafka-console-consumer.sh --bootstrap-server &lt;카프카 서버 주소>:9092 \\\n--topic hello.kafka \\\n--property print.key=true \\\n--property key.separator=\"-\" \\\n--group hello-group \\\n--from-beginning\n\nnull-NullTest2\nkey1-val1\nkey2-val2\nnull-NullTest3\nkey3-val3\nkey3-val4\nnull-NullTest1\n^CProcessed a total of 7 messages</code></pre></div>\n<ul>\n<li>\n<p>group hello-group</p>\n<ul>\n<li>group옵션을 통해 신규 컨슈머 그룹 hello-group을 생성하였다.</li>\n<li>컨슈머 그룹은 1개 이상의 컨슈머로 이루어져 있으며 해당 컨슈머 그룹을 통해 가져간 토픽 메시지는 가져간 메시지에 대해 커밋을 한다</li>\n<li>커밋이란 컨슈머가 특정 레코드까지 처리를 완료했다고 레코드의 오프셋 번호를 카프카 브로커에 저장하는 것이다. </li>\n<li>커밋 정보는 <code class=\"language-text\">__consumer_offsets</code> 이름의 내부 토픽에 저장된다.</li>\n</ul>\n</li>\n<li>\n<p>from-beginning</p>\n<ul>\n<li>전송한 데이터의 순서가 현재 출력되는 순서와 다른것을 볼 수 있다. 이는 카프카의 파티션때문에 생기는 현상이다.</li>\n<li>만약 토픽에 넣은 데이터의 순서를 보장하고 싶다면 파티션 1개로 구성된 토픽을 만드는 것이다.</li>\n<li>한개의 파티션에서는 데이터의 순서를 보장하기 때문이다.</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"kafka-consumer-groupssh\" style=\"position:relative;\"><a href=\"#kafka-consumer-groupssh\" aria-label=\"kafka consumer groupssh permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>kafka-consumer-groups.sh</h2>\n<p><strong>생성한 컨슈머 그룹 리스트</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ bin/kafka-consumer-groups.sh --bootstrap-server &lt;카프카 서버 주소>:9092 --list\nhello-group</code></pre></div>\n<p><strong>컨슈머 그룹이 데이터를 가져가는 토픽 확인</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ bin/kafka-consumer-groups.sh --bootstrap-server &lt;카프카 서버 주소>:9092 \\\n--group hello-group \\\n--describe\n\nGROUP           TOPIC           PARTITION  CURRENT-OFFSET  LOG-END-OFFSET  LAG             CONSUMER-ID     HOST            CLIENT-ID\nhello-group     hello.kafka     2          3               3               0               -               -               -\nhello-group     hello.kafka     1          3               3               0               -               -               -\nhello-group     hello.kafka     0          1               1               0               -               -               -</code></pre></div>\n<h2 id=\"kafka-verifiable-producer-consumersh\" style=\"position:relative;\"><a href=\"#kafka-verifiable-producer-consumersh\" aria-label=\"kafka verifiable producer consumersh permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>kafka-verifiable-producer, consumer.sh</h2>\n<p><code class=\"language-text\">kafka-verfiable-producer, consumer.sh</code>을 사용하면 String타입 메시지 값을 코드없이 주고받을수 있어 네트워크 통신 테스트를 할때 유용하다.</p>\n<p><strong>데이터 전송</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ bin/kafka-verifiable-producer.sh --bootstrap-server 3.35.13.39:9092 \\\n--max-messages 10 \\\n--topic verify-test\n\n{\"timestamp\":1629028682306,\"name\":\"startup_complete\"}\n[2021-08-15 20:58:02,510] WARN [Producer clientId=producer-1] Error while fetching metadata with correlation id 1 : {verify-test=LEADER_NOT_AVAILABLE} (org.apache.kafka.clients.NetworkClient)\n{\"timestamp\":1629028682746,\"name\":\"producer_send_success\",\"key\":null,\"value\":\"0\",\"offset\":0,\"topic\":\"verify-test\",\"partition\":0}\n{\"timestamp\":1629028682748,\"name\":\"producer_send_success\",\"key\":null,\"value\":\"1\",\"offset\":1,\"topic\":\"verify-test\",\"partition\":0}\n{\"timestamp\":1629028682748,\"name\":\"producer_send_success\",\"key\":null,\"value\":\"2\",\"offset\":2,\"topic\":\"verify-test\",\"partition\":0}\n{\"timestamp\":1629028682749,\"name\":\"producer_send_success\",\"key\":null,\"value\":\"3\",\"offset\":3,\"topic\":\"verify-test\",\"partition\":0}\n{\"timestamp\":1629028682749,\"name\":\"producer_send_success\",\"key\":null,\"value\":\"4\",\"offset\":4,\"topic\":\"verify-test\",\"partition\":0}\n{\"timestamp\":1629028682750,\"name\":\"producer_send_success\",\"key\":null,\"value\":\"5\",\"offset\":5,\"topic\":\"verify-test\",\"partition\":0}\n{\"timestamp\":1629028682750,\"name\":\"producer_send_success\",\"key\":null,\"value\":\"6\",\"offset\":6,\"topic\":\"verify-test\",\"partition\":0}\n{\"timestamp\":1629028682750,\"name\":\"producer_send_success\",\"key\":null,\"value\":\"7\",\"offset\":7,\"topic\":\"verify-test\",\"partition\":0}\n{\"timestamp\":1629028682750,\"name\":\"producer_send_success\",\"key\":null,\"value\":\"8\",\"offset\":8,\"topic\":\"verify-test\",\"partition\":0}\n{\"timestamp\":1629028682750,\"name\":\"producer_send_success\",\"key\":null,\"value\":\"9\",\"offset\":9,\"topic\":\"verify-test\",\"partition\":0}\n{\"timestamp\":1629028682757,\"name\":\"shutdown_complete\"}\n{\"timestamp\":1629028682759,\"name\":\"tool_data\",\"sent\":10,\"acked\":10,\"target_throughput\":-1,\"avg_throughput\":22.07505518763797}</code></pre></div>\n<p><strong>전송한 데이터 확인</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ bin/kafka-verifiable-consumer.sh --bootstrap-server 3.35.13.39:9092 \\\n--topic verify-test \\\n--group-id test-group\n\n{\"timestamp\":1629028804932,\"name\":\"startup_complete\"}\n{\"timestamp\":1629028805183,\"name\":\"partitions_assigned\",\"partitions\":[{\"topic\":\"verify-test\",\"partition\":0}]}\n{\"timestamp\":1629028805250,\"name\":\"records_consumed\",\"count\":10,\"partitions\":[{\"topic\":\"verify-test\",\"partition\":0,\"count\":10,\"minOffset\":0,\"maxOffset\":9}]}\n{\"timestamp\":1629028805260,\"name\":\"offsets_committed\",\"offsets\":[{\"topic\":\"verify-test\",\"partition\":0,\"offset\":10}],\"success\":true}\n...</code></pre></div>\n<h2 id=\"kafka-delete-recordssh\" style=\"position:relative;\"><a href=\"#kafka-delete-recordssh\" aria-label=\"kafka delete recordssh permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>kafka-delete-records.sh</h2>\n<p><code class=\"language-text\">kafka-delete-records.sh</code>명령어를 통해 이미 적재된 토픽의 데이터를 지울 수 있다. 토픽의 데이터중 가장오래된 데이터(가장 낮은 오프셋)부터 특정 시점의 오프셋가지 삭제할 수 있다.</p>\n<p>이때 삭제하고자 하는 데이터에 대한 정보를 파일(.json)로 저장해서 사용해야 한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ vi delete-topic.json\n{\"partitions\": [{\"topic\": \"verify-test\", \"partition\": 0, \"offset\": 5}], \"version\":1}\n\n$ bin/kafka-delete-records.sh --bootstrap-server 3.35.13.39:9092 \\\n--offset-json-file delete-topic.json\n\nExecuting records delete operation\nRecords delete operation completed:\npartition: verify-test-0        low_watermark: 5</code></pre></div>\n<p>여기서 주의해야 할 점은 토픽의 특정 레코드 하나만 삭제되는것이 아니라 파티션에 존재하는 가장 오래된 오프셋부터 지정한 오프셋까지 삭제된다는 점이다.\n즉, 카프카는 토픽의 특정 데이터만 삭제할 수 없다.</p>","frontmatter":{"title":"[Kafka] Kafka 커맨드라인 툴","date":"August 15, 2021"}}},"pageContext":{"slug":"/BackEnd/kafkaCMD/","previous":{"fields":{"slug":"/OpenSource/wsl2_openssh/"},"frontmatter":{"title":"[WSL] open-ssh설정(WSL 내부아이피 포트포워딩)"}},"next":{"fields":{"slug":"/BackEnd/kafka/"},"frontmatter":{"title":"[Kafka] Kafka설치"}}}}}