{"componentChunkName":"component---src-templates-blog-post-js","path":"/OpenSource/RDBInstall/","result":{"data":{"site":{"siteMetadata":{"title":"For The Record","author":"San Kim","siteUrl":"https://waterfogsw.github.io","comment":{"disqusShortName":"","utterances":"waterfogSW/waterfogSW.github.io"}}},"markdownRemark":{"id":"416d03d0-aa90-55ff-8a99-77b61e51be90","excerpt":"깃허브의  repo의 install.md를 참고하였습니다. Dependecies 먼저 의존성 패키지를 설치합니다. Install 깃에서 RocksDB를 클론합니다. 다음으로 make를 해주어야하는데 나 은 디버그 모드로 컴파일하고, 는 rocksdb를 릴리즈 모드로 컴파일 합니다. RocksDB 깃허브의 설치 가이드에는 릴리즈 모드인 로 설치하기를 권장하고 있습니다. 디버그 모드(Debug Mode) vs 릴리즈 모드(Release Mode…","html":"<br>\n<div align=\"center\">\n<div class=\"card\">\n  <div class=\"card__image\">\n    <img class=\"image\" src=\"https://user-images.githubusercontent.com/28651727/124079851-a09b4280-da84-11eb-87c1-c8e525739628.png\">\n  </div>\n</div>\n</div>\n<p>깃허브의 <code class=\"language-text\">facebook/rocksdb</code> repo의 <a href=\"https://github.com/facebook/rocksdb/blob/master/INSTALL.md\">install.md</a>를 참고하였습니다.</p>\n<h2 id=\"dependecies\" style=\"position:relative;\"><a href=\"#dependecies\" aria-label=\"dependecies permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Dependecies</h2>\n<p>먼저 의존성 패키지를 설치합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">sudo apt-get install -y \\\n  libgflags-dev \\\n  libsnappy-dev \\\n  zlib1g-dev \\\n  libbz2-dev \\\n  libzstd-dev \\\n  liblz4-dev</code></pre></div>\n<h2 id=\"install\" style=\"position:relative;\"><a href=\"#install\" aria-label=\"install permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Install</h2>\n<p>깃에서 RocksDB를 클론합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">git clone https://github.com/facebook/rocksdb.git</code></pre></div>\n<p>다음으로 make를 해주어야하는데 <code class=\"language-text\">make</code>나 <code class=\"language-text\">make all</code>은 디버그 모드로 컴파일하고, <code class=\"language-text\">make static_lib</code>는 rocksdb를 릴리즈 모드로 컴파일 합니다.<br>\nRocksDB 깃허브의 설치 가이드에는 릴리즈 모드인 <code class=\"language-text\">make static_lib</code>로 설치하기를 권장하고 있습니다.</p>\n<blockquote>\n<p><strong>디버그 모드(Debug Mode) vs 릴리즈 모드(Release Mode)</strong></p>\n<p><strong>디버그 모드</strong>의 경우 실행파일에 디버깅 정보를 포함하여 실행파일의 상태정보를 확인 가능합니다. 다만 이러한 디버깅 정보를 포함하기 때문에 속도가 릴리즈 모드에 비해 다소 느립니다  </p>\n<p>반면 <strong>릴리즈 모드</strong>의 경우 이러한 디버깅 정보를 포함하지않기 때문에 속도가 디버그 모드에 비해 빠르고 파일의 크기가 비교적 작습니다. </p>\n</blockquote>\n<p>릴리즈모드로 컴파일합니다(db_bench도 같이 컴파일하고싶으면 뒤에 추가해줍니다)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">cd rocksdb\nmake static_lib db_bench</code></pre></div>\n<p>컴파일이 완료되었으면 다음의 간단한 예제프로그램을 컴파일 해봅니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"c++\"><pre class=\"language-c++\"><code class=\"language-c++\">#include &lt;assert.h&gt;\n#include &quot;rocksdb/db.h&quot;\n\nrocksdb::DB* db;\nrocksdb::Options options;\nint main() {\n    options.create_if_missing = true;\n    rocksdb::Status status =\n        rocksdb::DB::Open(options, &quot;/tmp/testdb&quot;, &amp;db);\n    assert(status.ok());\n}</code></pre></div>\n<p>g++ 컴파일 옵션에는 다음과 같이 rocksdb를 포함해 줍니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">g++ test.cpp -lrocksdb -ldl -lpthread</code></pre></div>","frontmatter":{"title":"[RocksDB] RocksDB Install","date":"July 09, 2021"}}},"pageContext":{"slug":"/OpenSource/RDBInstall/","previous":{"fields":{"slug":"/CS/LFS/"},"frontmatter":{"title":"[OS] Log-Structured File system"}},"next":{"fields":{"slug":"/CS/BloomFilter/"},"frontmatter":{"title":"[DataStructure] Bloom filter"}}}}}